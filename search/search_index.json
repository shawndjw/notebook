{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#aix","title":"AIX","text":"<ul> <li>Setting up RBAC to Run IBM IHS on Port 80 as non-root</li> </ul>"},{"location":"#git","title":"Git","text":"<ul> <li>Create a Remote Branch</li> <li>Delete a local and remote Git branch</li> </ul>"},{"location":"#linux","title":"Linux","text":"<ul> <li>Find package that contains file on Debian based systems</li> </ul>"},{"location":"#misc","title":"Misc","text":"<ul> <li>Install Kobo-Inkbox</li> </ul>"},{"location":"#windows","title":"Windows","text":"<ul> <li>Retrieve Windows product key from registry</li> </ul>"},{"location":"#vmware","title":"VMware","text":""},{"location":"#powercli","title":"PowerCLI","text":"<ul> <li>Clone VM from Snapshot</li> </ul>"},{"location":"#shell","title":"Shell","text":"<ul> <li>Replace or Add a String to File</li> <li>Use <code>find</code> to <code>mv</code> files</li> </ul>"},{"location":"aix/setting-up-rbac-ibm-ihs/","title":"Setting up rbac ibm ihs","text":""},{"location":"aix/setting-up-rbac-ibm-ihs/#setting-up-rbac-for-ibm-ihs","title":"Setting up RBAC for IBM IHS","text":""},{"location":"aix/setting-up-rbac-ibm-ihs/#setting-up-rbac-for-ibm-ihs-on-aix-running-httpd-as-a-non-root-user-on-port-80","title":"Setting up RBAC for IBM IHS on AIX / Running httpd as a non-root user on port 80","text":"<p>Here\u2019s the procedure for running IBM HTTP Server as a non-root user on port 80</p> <p>Environment: User: wasadmin Command: /apps/WebSphere/HTTPServer/bin/apachectl</p>"},{"location":"aix/setting-up-rbac-ibm-ihs/#create-authorizations","title":"Create Authorizations:","text":"<pre><code>sudo mkauth IHS\n</code></pre>"},{"location":"aix/setting-up-rbac-ibm-ihs/#create-privileges","title":"Create Privileges","text":"<pre><code>$ sudo setsecattr -c inheritprivs=PV_PROC_PRIV,PV_WPAR_CKPT,PV_KER_ACCT,PV_NET_CNTL,PV_NET_PORT,PV_NET_RAWSOCK,PV_DAC_W \\\naccessauths=IHS secflags=FSF_EPS /apps/WebSphere/HTTPServer/bin/apachectl\n</code></pre>"},{"location":"aix/setting-up-rbac-ibm-ihs/#update-the-kernel-security-tables","title":"Update the kernel security tables","text":"<pre><code>$ sudo setkst\nSuccessfully updated the Kernel Authorization Table.\nSuccessfully updated the Kernel Role Table.\nSuccessfully updated the Kernel Command Table.\nSuccessfully updated the Kernel Device Table.\nSuccessfully updated the Kernel Object Domain Table.\nSuccessfully updated the Kernel Domains Table.\n</code></pre>"},{"location":"aix/setting-up-rbac-ibm-ihs/#create-assign-role","title":"Create / Assign Role","text":"<pre><code>$ sudo mkrole authorizations=\"IHS\" dfltmsg=\"IHS Apache Control\" ihsop\n\n$ sudo setkst\nSuccessfully updated the Kernel Authorization Table.\nSuccessfully updated the Kernel Role Table.\nSuccessfully updated the Kernel Command Table.\nSuccessfully updated the Kernel Device Table.\nSuccessfully updated the Kernel Object Domain Table.\nSuccessfully updated the Kernel Domains Table.\n\n$ sudo chuser roles=ihsop default_roles=ihsop wasadmin\n</code></pre> <p>Now you should be able to start IHS as wasadmin running on port 80. <pre><code>$ sudo su - wasadmin -c /apps/WebSphere/HTTPServer/bin/apachectl start\n</code></pre></p>"},{"location":"f5/displaying-and-deleting-http-cache/","title":"Displaying and deleting http cache","text":""},{"location":"f5/displaying-and-deleting-http-cache/#displaying-and-deleting-http-cache-entries-from-the-command-line","title":"Displaying and deleting HTTP cache entries from the command line","text":"<p>Reference: https://my.f5.com/manage/s/article/K13255</p>"},{"location":"git/create-a-remote-branch/","title":"Create a remote branch","text":""},{"location":"git/create-a-remote-branch/#create-a-remote-branch","title":"Create a remote branch","text":""},{"location":"git/create-a-remote-branch/#create-a-local-branch-and-switch-to-it","title":"Create a local branch and switch to it","text":"<p>Start by creating a local branch using <code>git checkout</code></p> <pre><code>git checkout -b &lt;new-branch-name&gt;\n</code></pre> <p>This will create a new branch from your current branch. If you want to create a branch from a different branch, run the following.</p> <pre><code>git checkout -b &lt;new-branch-name&gt; &lt;from-branch-name&gt;\n</code></pre>"},{"location":"git/create-a-remote-branch/#push-local-branch-to-remote","title":"Push local branch to remote","text":"<p>Run the below once you are ready to push the local branch to remote</p> <pre><code>git push -u origin &lt;branch-name&gt;\n</code></pre>"},{"location":"git/delete-branch/","title":"Delete branch","text":""},{"location":"git/delete-branch/#delete-local-and-remote-git-branch","title":"Delete local and remote Git branch","text":"<p>The below command delete a Git branch locally and remotely</p> <pre><code>// Delete local branch\ngit branch -d branchName\n</code></pre> <pre><code>// Delete remote branch\ngit push origin --delete branchName\n</code></pre>"},{"location":"kobo/InkBox/","title":"InkBox","text":""},{"location":"kobo/InkBox/#installing-kobo-inkbox","title":"Installing Kobo-InkBox","text":"<p>I have an old Kobo N705 e-reader that I can't seem to update with material anymore so I will be replacing the original Kobo software with Kobo-Inkbox. This will allow me to continue using the Kobo as a reader as I love the small form factor and find it quite pleasing to read from.</p>"},{"location":"kobo/InkBox/#steps","title":"Steps","text":""},{"location":"kobo/InkBox/#remove-back-cover","title":"Remove back cover","text":"<ol> <li>There are two back covers that need to be removed. The first is just decorative and snaps off. Looking at the unit from the back pry the back off from the top left corner, there's a small opening you can use with a fingernail or a flathead screwdriver.</li> <li>The second cover is fastened using 6 small philips screws. You will require a small philips screwdriver to remove the screws. Then use a small flathead screwdriver to carefully pry the cover off.</li> </ol>"},{"location":"kobo/InkBox/#install-kobo-inkbox","title":"Install Kobo-Inkbox","text":"<p>I will be keeping the 4GB MicroSD intact as a backup and will be replacing it with an 8GB card.</p> <ol> <li> <p>Download the latest pre-compiled binaries from the link in the GitHub repository README (I'm currently using Inkbox 2.0).</p> </li> <li> <p>Check to make sure that the file integrity is intact.</p> </li> </ol> <pre><code>$ cat inkbox-2.0-n705.xz.sha256\n2e103043cafe391b75d37907c25f5a5d1437f1e630008c612c882d19ff837446\n$ sha256sum inkbox-2.0-n705.xz\n2e103043cafe391b75d37907c25f5a5d1437f1e630008c612c882d19ff837446  inkbox-2.0-n705.xz\n</code></pre> <ol> <li>Flash 8GB MicroSD card. The shows up as /dev/sda for me but becareful as this is usually the root drive. It isn't in my case as my root is using an nvme drive and shows up as /dev/nvme0</li> </ol> <p><pre><code>$ xzcat inkbox-2.0-n705.xz | sudo dd of=/dev/sda\n$ sync\n</code></pre> 4. Remove the 4GB MicroSD card by pulling out of the slot and replace it with the newly imaged MicroSD. Boot up the device and that's it. Enjoy!</p>"},{"location":"linux/find-package-with-file-debian/","title":"Find package with file debian","text":""},{"location":"linux/find-package-with-file-debian/#find-package-that-contains-file-on-debian-based-systems","title":"Find package that contains file on Debian based systems","text":""},{"location":"linux/find-package-with-file-debian/#search-installed-packages","title":"Search installed packages","text":"<p>Use dpkg to search installed packages <pre><code>dpkg -S filename-search-pattern\n</code></pre></p>"},{"location":"linux/find-package-with-file-debian/#search-package-repository","title":"Search package repository","text":"<p>Install <code>apt-file</code> to search all repository packages <pre><code>sudo apt-get install -y apt-file\nsudo apt-file update\nsudo apt-file search filename-search-pattern\n</code></pre></p>"},{"location":"oracle/duplicate-profiles/","title":"Duplicate profiles","text":""},{"location":"oracle/duplicate-profiles/#duplicate-oracle-profiles","title":"Duplicate Oracle Profiles","text":"<p>Create <code>profiles.sql</code> with below contents <pre><code>SET serveroutput ON\n\nDECLARE\n CURSOR c_profiles IS\n  SELECT PROFILE, RESOURCE_NAME, LIMIT\n  FROM dba_profiles\n  ORDER BY PROFILE, resource_name;\n\n  s_PROFILE                     dba_profiles.PROFILE%TYPE ;\n  s_prev_PROFILE        dba_profiles.PROFILE%TYPE ;\n  s_RESOURCE_NAME       dba_profiles.RESOURCE_NAME%TYPE ;\n  s_LIMIT                       dba_profiles.LIMIT%TYPE ;\nBEGIN\n\ns_prev_PROFILE := 'no_such_profile' ;\n\ndbms_output.enable(1000000);\nOPEN c_profiles;\nLOOP\n  FETCH c_profiles INTO s_PROFILE,s_RESOURCE_NAME,s_LIMIT ;\n  IF ( s_prev_profile &lt;&gt; s_profile ) THEN\n    BEGIN\n      dbms_output.put_line ( '--');\n      dbms_output.put_line ( 'create profile \"'||s_profile||'\" limit ' ||s_RESOURCE_NAME|| ' ' || s_LIMIT||';' ) ;\n      s_prev_profile := s_profile ;\n    END;\n  ELSE\n       dbms_output.put_line ( 'alter profile \"'||s_profile|| '\" limit ' ||s_RESOURCE_NAME|| ' ' || s_LIMIT || ';' ) ;\n  END IF;\n  EXIT WHEN c_profiles%NOTFOUND ;\nEND LOOP ;\n\nCLOSE c_profiles ;\n\nEND;\n/\n</code></pre></p> <p>Sample execution</p> <pre><code>$ sqlplus / as sysdba\n\nSQL*Plus: Release 11.2.0.2.0 Production on Thu Aug 18 10:36:46 2022\n\nCopyright (c) 1982, 2010, Oracle.  All rights reserved.\n\n\nConnected to:\nOracle Database 11g Release 11.2.0.2.0 - Production\n\nSQL&gt; @profiles.sql\n--\ncreate profile \"DEFAULT\" limit COMPOSITE_LIMIT UNLIMITED;\nalter profile \"DEFAULT\" limit CONNECT_TIME UNLIMITED;\nalter profile \"DEFAULT\" limit CPU_PER_CALL UNLIMITED;\nalter profile \"DEFAULT\" limit CPU_PER_SESSION UNLIMITED;\nalter profile \"DEFAULT\" limit FAILED_LOGIN_ATTEMPTS 10;\nalter profile \"DEFAULT\" limit IDLE_TIME UNLIMITED;\nalter profile \"DEFAULT\" limit LOGICAL_READS_PER_CALL UNLIMITED;\nalter profile \"DEFAULT\" limit LOGICAL_READS_PER_SESSION UNLIMITED;\nalter profile \"DEFAULT\" limit PASSWORD_GRACE_TIME 7;\nalter profile \"DEFAULT\" limit PASSWORD_LIFE_TIME 180;\nalter profile \"DEFAULT\" limit PASSWORD_LOCK_TIME 1;\nalter profile \"DEFAULT\" limit PASSWORD_REUSE_MAX UNLIMITED;\nalter profile \"DEFAULT\" limit PASSWORD_REUSE_TIME UNLIMITED;\nalter profile \"DEFAULT\" limit PASSWORD_VERIFY_FUNCTION NULL;\nalter profile \"DEFAULT\" limit PRIVATE_SGA UNLIMITED;\nalter profile \"DEFAULT\" limit SESSIONS_PER_USER UNLIMITED;\n--\ncreate profile \"NO_PWD_EXPIRE\" limit COMPOSITE_LIMIT UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit CONNECT_TIME UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit CPU_PER_CALL UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit CPU_PER_SESSION UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit FAILED_LOGIN_ATTEMPTS UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit IDLE_TIME UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit LOGICAL_READS_PER_CALL UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit LOGICAL_READS_PER_SESSION UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit PASSWORD_GRACE_TIME UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit PASSWORD_LIFE_TIME UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit PASSWORD_LOCK_TIME UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit PASSWORD_REUSE_MAX UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit PASSWORD_REUSE_TIME UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit PASSWORD_VERIFY_FUNCTION NULL;\nalter profile \"NO_PWD_EXPIRE\" limit PRIVATE_SGA UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit SESSIONS_PER_USER UNLIMITED;\nalter profile \"NO_PWD_EXPIRE\" limit SESSIONS_PER_USER UNLIMITED;\n\nPL/SQL procedure successfully completed.\n\nSQL&gt; quit\n</code></pre>"},{"location":"recipes/steak-marinade/","title":"Steak marinade","text":""},{"location":"recipes/steak-marinade/#steak-marinade","title":"Steak Marinade","text":"<p>I love a steak and rarely need to add anything but salt &amp; pepper or Montreal Steak spice but sometimes you buy a cheaper cut of meat or settle for AA vs AAA. I found the below recipe and it was a hit with my better half so it's a keeper!</p>"},{"location":"recipes/steak-marinade/#incredients","title":"Incredients","text":"<ul> <li>2 steaks</li> <li>4 tbsp soy sauce</li> <li>1 tbsp olive oil</li> <li>1 tbsp ketchup</li> <li>1 tsp minced garlic</li> <li>1 tsp oregano</li> <li>1 tsp pepper</li> </ul>"},{"location":"recipes/steak-marinade/#directions","title":"Directions","text":"<ol> <li>Blend all ingrediets, pour over steaks.</li> <li>Marinate 1 to 3 hours, longer is better, turning frequently</li> <li>Grill to your preference</li> </ol>"},{"location":"recipes/steak-marinade/#rererences","title":"Rererences","text":"<ul> <li>World's Best Grilled Steak</li> </ul>"},{"location":"shell/replace-or-add-string-to-file/","title":"Replace or add string to file","text":""},{"location":"shell/replace-or-add-string-to-file/#replace-or-add-a-string-to-file","title":"Replace or Add a String to File","text":"<pre><code>grep -q string file &amp;&amp; \n    sed -i 's/string/newstring/' file || echo \"newstring\" &gt;&gt; file\n</code></pre> <p>The above is a shorthand way of writing:</p> <pre><code>if grep -q string file; then \n    sed -i 's/string/newstring/' file\nelse\n    echo \"newstring\" &gt;&gt; file\nfi\n</code></pre>"},{"location":"shell/use-find-to-mv-files/","title":"Use find to mv files","text":""},{"location":"shell/use-find-to-mv-files/#use-find-to-mv-files","title":"Use <code>find</code> to <code>mv</code> files","text":"<pre><code>find /path -name '*&lt;pattern here&gt;*' -exec mv -t desination/ {} +\n</code></pre> <ul> <li><code>-t</code> specifies the destination path before the argument file (designated by {} in find)</li> <li><code>{}</code> is the current file matching the <code>find</code> command criteria</li> <li><code>+</code> the find command line is built by appending each selected file name at the end; the total number of invocations of the <sub>mv</sub> command will be much less than the number of matched files.</li> </ul>"},{"location":"vmware/powercli/clone-vm-from-snapshot/","title":"Clone vm from snapshot","text":""},{"location":"vmware/powercli/clone-vm-from-snapshot/#clone-vmware-vm-from-a-snapshot","title":"Clone VMware VM from a Snapshot","text":"<p>Use the default cmdlets to clone the VM from a snapshot by creating a linked clone from the snapshot, then a full clone of the linked clone, then remove the linked clone.</p> <pre><code>$snap = Get-Snapshot -VM myVM -Name mySnapshot\nNew-VM -Name \"$($snap.VM.Name)-linkedClone\" -VMHost $snap.VM.VMHost -VM $snap.VM -ReferenceSnapshot $snap -LinkedClone\nNew-VM -Name \"$($snap.VM.Name)-Clone\" -VMHost $snap.VM.VMHost -VM \"$($snap.VM.Name)-linkedClone\"\nRemove-VM -VM \"$($snap.VM.Name)-linkedClone\" -DeletePermanently -Confirm:$false\n</code></pre>"},{"location":"windows/retrieve-product-key-from-registry/","title":"Retrieve product key from registry","text":""},{"location":"windows/retrieve-product-key-from-registry/#retrieve-windows-product-key-from-registry","title":"Retrieve Windows Product Key from Registry","text":"<p>If your product key isn't embedded in the firmware or you're missing your COA sticker, you're not out of luck as long as you haven't formatted your computer. You can still recover the key because Windows stores it in the registry. Here is how:</p> <ol> <li> <p>Open a new Notepad window</p> </li> <li> <p>Copy and paste the following text into the window</p> </li> </ol> <pre><code>Set WshShell = CreateObject(\"WScript.Shell\")\nMsgBox ConvertToKey(WshShell.RegRead(\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\DigitalProductId\"))\n\nFunction ConvertToKey(Key)\nConst KeyOffset = 52\ni = 28\nChars = \"BCDFGHJKMPQRTVWXY2346789\"\nDo\nCur = 0\nx = 14\nDo\nCur = Cur * 256\nCur = Key(x + KeyOffset) + Cur\nKey(x + KeyOffset) = (Cur \\ 24) And 255\nCur = Cur Mod 24\nx = x -1\nLoop While x &gt;= 0\ni = i -1\nKeyOutput = Mid(Chars, Cur + 1, 1) &amp; KeyOutput\nIf (((29 - i) Mod 6) = 0) And (i &lt;&gt; -1) Then\ni = i -1\nKeyOutput = \"-\" &amp; KeyOutput\nEnd If\nLoop While i &gt;= 0\nConvertToKey = KeyOutput\nEnd Function\n</code></pre> <ol> <li> <p>Click File &gt; Save As and save the file to your desktop as productkey.vbs. It's important to include the .vbs extension because this is a Windows Scripting Host file.</p> </li> <li> <p>Close Notepad and double-click the file. Wait a few seconds, and then you will be presented with a popup displaying your product key.</p> </li> </ol>"},{"location":"windows/windows-network-trace/","title":"Windows network trace","text":""},{"location":"windows/windows-network-trace/#create-a-windows-network-trace","title":"Create a Windows network trace","text":"<p>I usually use tcpdump on *nix machines and used to use wireshark on Windows but this would mean that Wireshark would need to get installed.</p> <p>You can use <code>netsh</code> to capture the network traffic.</p> <pre><code>netsh trace start capture=yes maxSize=4096 tracefile=c:\\temp\\trace.etl level=verbose\nnetsh trace stop\n</code></pre> <p>Once you have your trace file you can convert it to something wireshark understands by downloading the Microsoft provided <code>etl2pcapng.exe</code> from GitHub</p> <p>Then convert the <code>trace.etl</code> file.</p> <pre><code>etl2pcapng trace.etl\n</code></pre> <p>This will product a <code>trace.pcapng</code> file that you can open up with Wireshark</p>"}]}